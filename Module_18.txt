Security Controls:
Safeguards designed to reduce specific security risks.

 Types of security controls:

 ->Technical

 ->Operational

 ->Managerial

Information Privacy:
The protection of unauthorized access and distribution of data.

Principle of least privilege:
The concept of granting only the minimal access and authorization required to complete a task or function.

Data Owner:
The person that decides who can access, edit, use or destroy their information.

Data Custodian:
Anyone or anything that's responsible for the safe handling, transport, and storage of information.

Limiting access reduces risk:
Every business needs to plan for the risk of data theft, misuse, or abuse. Implementing the principle of least privilege can 
greatly reduce the risk of costly incidents like data breaches by:

->Limiting access to sensitive information

->Reducing the chances of accidental data modification, tampering, or loss

->Supporting system monitoring and administration

Least privilege greatly reduces the likelihood of a successful attack by connecting specific resources to specific users and 
placing limits on what they can do. It's an important security control that should be applied to any asset. Clearly defining who 
or what your users are is usually the first step of implementing least privilege effectively.

Note: Least privilege is closely related to another fundamental security principle, the separation of duties—a security concept 
that divides tasks and responsibilities among different users to prevent giving a single user complete control over critical 
business functions. You'll learn more about separation of duties in a different reading about identity and access management.

 Determining access and authorization:
 To implement least privilege, access and authorization must be determined first. There are two questions to ask to do so: 

 ->Who is the user? 

 ->How much access do they need to a specific resource? 

 Determining who the user is usually straightforward. A user can refer to a person, like a customer, an employee, or a vendor. It 
 can also refer to a device or software that's connected to your business network. In general, every user should have their own 
 account. Accounts are typically stored and managed within an organization's directory service.

 These are the most common types of user accounts:

 ->Guest accounts: are provided to external users who need to access an internal network, like customers, clients, contractors, or 
 business partners.

 ->User accounts: are assigned to staff based on their job duties.

 ->Service accounts: are granted to applications or software that needs to interact with other software on the network.

 ->Privileged accounts: have elevated permissions or administrative access.

 It's best practice to determine a baseline access level for each account type before implementing least privilege. However, the 
 appropriate access level can change from one moment to the next. For example, a customer support representative should only have 
 access to your information while they are helping you. Your data should then become inaccessible when the support agent starts 
 working with another customer and they are no longer actively assisting you. Least privilege can only reduce risk if user accounts 
 are routinely and consistently monitored.

 Pro tip: Passwords play an important role when implementing the principle of least privilege. Even if user accounts are assigned 
 appropriately, an insecure password can compromise your systems.

 Auditing account privileges:
 Setting up the right user accounts and assigning them the appropriate privileges is a helpful first step. Periodically auditing those accounts is a key part of keeping your company’s systems secure.

 There are three common approaches to auditing user accounts:

 ->Usage audits: When conducting a usage audit, the security team will review which resources each account is accessing and what 
   the user is doing with the resource. Usage audits can help determine whether users are acting in accordance with an 
   organization’s security policies. They can also help identify whether a user has permissions that can be revoked because they 
   are no longer being used.

 ->Privilege audits: Users tend to accumulate more access privileges than they need over time, an issue known as privilege creep. 
   This might occur if an employee receives a promotion or switches teams and their job duties change. Privilege audits assess 
   whether a user's role is in alignment with the resources they have access to.

 ->Account change audits: Account directory services keep records and logs associated with each user. Changes to an account are 
   usually saved and can be used to audit the directory for suspicious activity, like multiple attempts to change an account 
   password. Performing account change audits helps to ensure that all account changes are made by authorized users.

 Note: Most directory services can be configured to alert system administrators of suspicious activity.

The data lifecycle:
The data lifecycle is an important model that security teams consider when protecting information. It influences how they set 
policies that align with business objectives. It also plays an important role in the technologies security teams use to make 
information accessible.

In general, the data lifecycle has five stages. Each describe how data flows through an organization from the moment it is created 
until it is no longer useful:

->Collect

->Store

->Use

->Archive

->Destroy

Protecting information at each stage of this process describes the need to keep it accessible and recoverable should something go 
wrong.Protecting information at each stage of this process describes the need to keep it accessible and recoverable should 
something go wrong.

Data governance:
Businesses handle massive amounts of data every day. New information is constantly being collected from internal and external 
sources. A structured approach to managing all of this data is the best way to keep it private and secure.

Data governance is a set of processes that define how an organization manages information. Governance often includes policies that 
specify how to keep data private, accurate, available, and secure throughout its lifecycle.

Effective data governance is a collaborative activity that relies on people. Data governance policies commonly categorize 
individuals into a specific role:

->Data owner: the person that decides who can access, edit, use, or destroy their information.

->Data custodian: anyone or anything that's responsible for the safe handling, transport, and storage of information.

->Data steward: the person or group that maintains and implements data governance policies set by an organization.

Businesses store, move, and transform data using a wide range of IT systems. Data governance policies often assign accountability 
to data owners, custodians, and stewards.

Note: As a data custodian, you will primarily be  responsible for maintaining security and privacy rules for your organization.

Legally protected information:
Data is more than just a bunch of 1s and 0s being processed by a computer. Data can represent someone's personal thoughts, actions, 
and choices. It can represent a purchase, a sensitive medical decision, and everything in between. For this reason, data owners 
should be the ones deciding whether or not to share their data. As a security professional, protecting a person's data privacy 
decisions must always be respected.

Securing data can be challenging. In large part, that's because data owners generate more data than they can manage. As a result, 
data custodians and stewards sometimes lack direct, explicit instructions on how they should handle specific types of data. 
Governments and other regulatory agencies have bridged this gap by creating rules that specify the types of information that 
organizations must protect by default:

->PII is any information used to infer an individual's identity. Personally identifiable information, or PII, refers to information 
  that can be used to contact or locate someone.

->PHI stands for protected health information.  In the U.S., it is regulated by the Health Insurance Portability and Accountability 
  Act (HIPAA), which defines PHI as “information that relates to the past, present, or future physical or mental health or 
  condition of an individual.” In the EU, PHI has a similar definition but it is regulated by the General Data Protection 
  Regulation (GDPR).

->SPII is a specific type of PII that falls under stricter handling guidelines. The S stands for sensitive, meaning this is a type 
  of personally identifiable information that should only be accessed on a need-to-know basis, such as a bank account number or 
  login credentials.

Information security vs. information privacy:
Security and privacy are two terms that often get used interchangeably outside of this field. Although the two concepts are 
connected, they represent specific functions:

->Information privacy refers to the protection of unauthorized access and distribution of data.

->Information security (InfoSec) refers to the practice of keeping data in all states away from unauthorized users.

The key difference: Privacy is about providing people with control over their personal information and how it's shared. Security 
is about protecting people’s choices and keeping their information safe from potential threats.

For example, a retail company might want to collect specific kinds of personal information about its customers for marketing 
purposes, like their age, gender, and location. How this private information will be used should be disclosed to customers before 
it's collected. In addition, customers should be given an option to opt-out if they decide not to share their data.

Once the company obtains consent to collect personal information, it might implement specific security controls in place to protect 
that private data from unauthorized access, use, or disclosure. The company should also have security controls in place to respect 
the privacy of all stakeholders and anyone who chose to opt-out.

Note: Privacy and security are both essential for maintaining customer trust and brand reputation.

Notable privacy regulations:
Businesses are required to abide by certain laws to operate. Regulations are rules set by a government or another authority to 
control the way something is done. Privacy regulations in particular exist to protect a user from having their information 
collected, used, or shared without their consent. Regulations may also describe the security measures that need to be in place to 
keep private information away from threats.

Three of the most influential industry regulations that every security professional should know about are:

->General Data Protection Regulation (GDPR):GDPR is a set of rules and regulations developed by the European Union (EU) that puts 
  data owners in total control of their personal information. Under GDPR, types of personal information include a person's name, 
  address, phone number, financial information, and medical information.

  The GDPR applies to any business that handles the data of EU citizens or residents, regardless of where that business operates. 
  For example, a US based company that handles the data of EU visitors to their website is subject to the GDPRs provisions.

->Payment Card Industry Data Security Standard (PCI DSS):PCI DSS is a set of security standards formed by major organizations in 
  the financial industry. This regulation aims to secure credit and debit card transactions against data theft and fraud.

->Health Insurance Portability and Accountability Act (HIPAA):HIPAA is a U.S. law that requires the protection of sensitive 
  patient health information. HIPAA prohibits the disclosure of a person's medical information without their knowledge and consent.

Note: These regulations influence data handling at many organizations around the world even though they were developed by specific 
nations.

Several other security and privacy compliance laws exist. Which ones your organization needs to follow will depend on the industry 
and the area of authority. Regardless of the circumstances, regulatory compliance is important to every business.

Security assessments and audits:
Businesses should comply with important regulations in their industry. Doing so validates that they have met a minimum level of 
security while also demonstrating their dedication to maintaining data privacy.

Meeting compliance standards is usually a continual, two-part process of security audits and assessments:

->A security audit is a review of an organization's security controls, policies, and procedures against a set of expectations.

->A security assessment is a check to determine how resilient current security implementations are against threats.

For example, if a regulation states that multi-factor authentication (MFA) must be enabled for all administrator accounts, an audit 
might be conducted to check those user accounts for compliance. After the audit, the internal team might perform a security 
assessment that determines many users are using weak passwords. Based on their assessment, the team could decide to enable MFA on 
all user accounts to improve their overall security posture.

Note: Compliance with legal regulations, such as GDPR, can be determined during audits.

Businesses usually perform security audits less frequently, approximately once per year. Security audits may be performed both 
internally and externally by different third-party groups.

In contrast, security assessments are usually performed more frequently, about every three-to-six months. Security assessments are 
typically performed by internal employees, often as preparation for a security audit. Both evaluations are incredibly important 
ways to ensure that your systems are effectively protecting everyone's privacy.

Cryptography:
The process of transforming information into a form that unintended readers can't understand.

Cipher:
An algorith that encrypts information.

Cryptographic Key:
A mechanism that decrypts ciphertext.

Brute force attack:
A trial and error process of discovering private information.

Public Key Infrastructure (PKI):
An encryption framework that secures the exchange of information online.

 PKI Process:
 1.Exchange of encrypted information:

 ->Asymmetric encryption: The use of a public and private key pair for encryption and decryption of data.
  
 ->Symmetric encryption: The use of a single key to exchange information.

 2.Establish trust using a system of digital certificates:

 ->Digital certificates: A file that verifies the identity of a public key holder.

Types of encryption:
There are two main types of encryption:

->Symmetric encryption is the use of a single secret key to exchange information. Because it uses one key for encryption and 
  decryption, the sender and receiver must know the secret key to lock or unlock the cipher.

->Asymmetric encryption is the use of a public and private key pair for encryption and decryption of data. It uses two separate 
  keys: a public key and a private key. The public key is used to encrypt data, and the private key decrypts it. The private key 
  is only given to users with authorized access.

The importance of key length:
Ciphers are vulnerable to brute force attacks, which use a trial and error process to discover private information. This tactic is 
the digital equivalent of trying every number in a combination lock trying to find the right one. In modern encryption, longer key 
lengths are considered to be more secure. Longer key lengths mean more possibilities that an attacker needs to try to unlock a 
cipher.

One drawback to having long encryption keys is slower processing times. Although short key lengths are generally less secure, 
they’re much faster to compute. Providing fast data communication online while keeping information safe is a delicate balancing 
act. 

Approved algorithms:
Many web applications use a combination of symmetric and asymmetric encryption. This is how they balance user experience with 
safeguarding information.

 Symmetric algorithms:
 ->Triple DES (3DES) is known as a block cipher because of the way it converts plaintext into ciphertext in “blocks.” Its origins 
   trace back to the Data Encryption Standard (DES), which was developed in the early 1970s. DES was one of the earliest symmetric 
   encryption algorithms that generated 64-bit keys, although only 56 bits are used for encryption. A bit is the smallest unit of 
   data measurement on a computer. As you might imagine, Triple DES generates keys that are three times as long. Triple DES applies 
   the DES algorithm three times, using three different 56-bit keys. This results in an effective key length of 168 bits. Despite 
   the longer keys, many organizations are moving away from using Triple DES due to limitations on the amount of data that can be 
   encrypted. However, Triple DES is likely to remain in use for backwards compatibility purposes.   

 ->Advanced Encryption Standard (AES) is one of the most secure symmetric algorithms today. AES generates keys that are 128, 192, 
   or 256 bits. Cryptographic keys of this size are considered to be safe from brute force attacks. It’s estimated that brute 
   forcing an AES 128-bit key could take a modern computer billions of years!

 Asymmetric algorithms:
 ->Rivest Shamir Adleman (RSA) is named after its three creators who developed it while at the Massachusetts Institute of 
   Technology (MIT). RSA is one of the first asymmetric encryption algorithms that produces a public and private key pair. 
   Asymmetric algorithms like RSA produce even longer key lengths. In part, this is due to the fact that these functions are 
   creating two keys. RSA key sizes are 1,024, 2,048, or 4,096 bits. RSA is mainly used to protect highly sensitive data.

 ->Digital Signature Algorithm (DSA) is a standard asymmetric algorithm that was introduced by NIST in the early 1990s. DSA also 
   generates key lengths of 2,048 bits. This algorithm is widely used today as a complement to RSA in public key infrastructure.

 Generating keys:
 These algorithms must be implemented when an organization chooses one to protect their data. One way this is done is using 
 OpenSSL, which is an open-source command line tool that can be used to generate public and private keys. OpenSSL is commonly used 
 by computers to verify digital certificates that are exchanged as part of public key infrastructure.

 Note: OpenSSL is just one option. There are various others available that can generate keys with any of these common algorithms. 

 In early 2014, OpenSSL disclosed a vulnerability, known as the Heartbleed bug, that exposed sensitive data in the memory of 
 websites and applications. Although unpatched versions of OpenSSL are still available, the Heartbleed bug was patched later that 
 year (2014). Many businesses today use the secure versions of OpenSSL to generate public and private keys, demonstrating the 
 importance of using up-to-date software.

Obscurity is not security:
In the world of cryptography, a cipher must be proven to be unbreakable before claiming that it is secure. According to Kerckhoff’s 
principle, cryptography should be designed in such a way that all the details of an algorithm—except for the private key—should be 
knowable without sacrificing its security. For example, you can access all the details about how AES encryption works online and 
yet it is still unbreakable.

Occasionally, organizations implement their own, custom encryption algorithms. There have been instances where those secret 
cryptographic systems have been quickly cracked after being made public.

Pro tip: A cryptographic system should not be considered secure if it requires secrecy around how it works.

 Encryption is everywhere:
 Companies use both symmetric and asymmetric encryption. They often work as a team, balancing security with user experience.

 For example, websites tend to use asymmetric encryption to secure small blocks of data that are important. Usernames and 
 passwords are often secured with asymmetric encryption while processing login requests. Once a user gains access, the rest of 
 their web session often switches to using symmetric encryption for its speed.

 Using data encryption like this is increasingly required by law. Regulations like the Federal Information Processing Standards 
 (FIPS 140-3) and the General Data Protection Regulation (GDPR) outline how data should be collected, used, and handled. Achieving 
 compliance with either regulation is critical to demonstrating to business partners and governments that customer data is handled 
 responsibly.

Non-Repudiation:
The concept that the authenticity of information can't be denied.

Hash Function:
Algorithms that produce a code that can't be decrypted.It converts information into a unique value that can then be used to 
determine its integrity.

 Origins of hashing:
 Hash functions have been around since the early days of computing. They were originally created as a way to quickly search for 
 data. Since the beginning, these algorithms have been designed to represent data of any size as small, fixed-size values, or 
 digests. Using a hash table, which is a data structure that's used to store and reference hash values, these small values became 
 a more secure and efficient way for computers to reference data.

 One of the earliest hash functions is Message Digest 5, more commonly known as MD5. Professor Ronald Rivest of the Massachusetts 
 Institute of Technology (MIT) developed MD5 in the early 1990s as a way to verify that a file sent over a network matched its 
 source file.

 Whether it’s used to convert a single email or the source code of an application, MD5 works by converting data into a 128-bit 
 value. Bits can either be a 0 or 1. In a computer, bits represent user input in a way that computers can interpret. In a hash 
 table, this appears as a string of 32 characters. Altering anything in the source file generates an entirely new hash value.

 Generally, the longer the hash value, the more secure it is. It wasn’t long after MD5's creation that security practitioners 
 discovered 128-bit digests resulted in a major vulnerability.

  Hash collisions:
  One of the flaws in MD5 happens to be a characteristic of all hash functions. Hash algorithms map any input, regardless of its 
  length, into a fixed-size value of letters and numbers. What’s the problem with that? Although there are an infinite amount of 
  possible inputs, there’s only a finite set of available outputs!

  MD5 values are limited to 32 characters in length. Due to the limited output size, the algorithm is considered to be vulnerable 
  to hash collision, an instance when different inputs produce the same hash value. Because hashes are used for authentication, a 
  hash collision is similar to copying someone’s identity. Attackers can carry out collision attacks to fraudulently impersonate 
  authentic data.

 Next-generation hashing:
 To avoid the risk of hash collisions, functions that generated longer values were needed. MD5's shortcomings gave way to a new 
 group of functions known as the Secure Hashing Algorithms, or SHAs.

 The National Institute of Standards and Technology (NIST) approves each of these algorithms. Numbers besides each SHA function 
 indicate the size of its hash value in bits. Except for SHA-1, which produces a 160-bit digest, these algorithms are considered 
 to be collision-resistant. However, that doesn’t make them invulnerable to other exploits.

  Five functions make up the SHA family of algorithms:

  ->SHA-1

  ->SHA-224

  ->SHA-256

  ->SHA-384

  ->SHA-512

 Secure password storage:
 Passwords are typically stored in a database where they are mapped to a username. The server receives a request for authentication 
 that contains the credentials supplied by the user. It then looks up the username in the database and compares it with the 
 password that was provided and verifies that it matches before granting them access.

 This is a safe system unless an attacker gains access to the user database. If passwords are stored in plaintext, then an attacker 
 can steal that information and use it to access company resources. Hashing adds an additional layer of security. Because hash 
 values can't be reversed, an attacker would not be able to steal someone's login credentials if they managed to gain access to the 
 database.

  Rainbow tables:
  A rainbow table is a file of pre-generated hash values and their associated plaintext. They’re like dictionaries of weak 
  passwords. Attackers capable of obtaining an organization’s password database can use a rainbow table to compare them against all 
  possible values.

 Adding some “salt”:
 Functions with larger digests are less vulnerable to collision and rainbow table attacks. But as you’re learning, no security 
 control is perfect.

 Salting is an additional safeguard that's used to strengthen hash functions. A salt is a random string of characters that's added 
 to data before it's hashed. The additional characters produce a more unique hash value, making salted data resilient to rainbow 
 table attacks.

 For example, a database containing passwords might have several hashed entries for the password "password." If those passwords 
 were all salted, each entry would be completely different. That means an attacker using a rainbow table would be unable to find 
 matching values for "password" in the database.

 For this reason, salting has become increasingly common when storing passwords and other types of sensitive data. The length and 
 uniqueness of a salt is important. Similar to hash values, the longer and more complex a salt is, the harder it is to crack.

Access Controls:
Security controls that manage access, authorization, and accountability of information.

AAA framework:

->Authentication

->Authorization

->Accounting

Single sign-on (SSO):
Single sign-on (SSO) is a technology that combines several different logins into one. More companies are turning to SSO as a 
solution to their authentication needs for three reasons:

->SSO improves the user experience by eliminating the number of usernames and passwords people have to remember.

->Companies can lower costs by streamlining how they manage connected services.

->SSO improves overall security by reducing the number of access points attackers can target.

This technology became available in the mid-1990s as a way to combat password fatigue, which refers to people’s tendency to reuse 
passwords across services. Remembering many different passwords can be a challenge, but using the same password repeatedly is a 
major security risk. SSO solves this dilemma by shifting the burden of authentication away from the user.

 How SSO works:
 SSO works by automating how trust is established between a user and a service provider. Rather than placing the responsibility on 
 an employee or customer, SSO solutions use trusted third-parties to prove that a user is who they claim to be. This is done 
 through the exchange of encrypted access tokens between the identity provider and the service provider.

 Similar to other kinds of digital information, these access tokens are exchanged using specific protocols. SSO implementations 
 commonly rely on two different authentication protocols: LDAP and SAML. LDAP, which stands for Lightweight Directory Access 
 Protocol, is mostly used to transmit information on-premises; SAML, which stands for Security Assertion Markup Language, is 
 mostly used to transmit information off-premises, like in the cloud.

 Note: LDAP and SAML protocols are often used together.

 Limitations of SSO:
 Usernames and passwords alone are not always the most secure way of protecting sensitive information. SSO provides useful 
 benefits, but there’s still the risk associated with using one form of authentication. For example, a lost or stolen password 
 could expose information across multiple services. Thankfully, there’s a solution to this problem.

Multi-factor authentication (MFA):
Multi-factor authentication (MFA) requires a user to verify their identity in two or more ways to access a system or network. In a 
sense, MFA is similar to using an ATM to withdraw money from your bank account. First, you insert a debit card into the machine as 
one form of identification. Then, you enter your PIN number as a second form of identification. Combined, both steps, or factors, 
are used to verify your identity before authorizing you to access the account.

 Strengthening authentication
 MFA builds on the benefits of SSO. It works by having users prove that they are who they claim to be. The user must provide two 
 factors (2FA) or three factors (3FA) to authenticate their identification. The MFA process asks users to provide these proofs, 
 such as:

 ->Something a user knows: most commonly a username and password

 ->Something a user has: normally received from a service provider, like a one-time passcode (OTP) sent via SMS

 ->Something a user is: refers to physical characteristics of a user, like their fingerprints or facial scans

 Requiring multiple forms of identification is an effective security measure, especially in cloud environments. It can be difficult 
 for businesses in the cloud to ensure that the users remotely accessing their systems are not threat actors. MFA can reduce the 
 risk of authenticating the wrong users by requiring forms of identification that are difficult to imitate or brute force.

Separation of duties:
The principle that users should not be given levels of authorization that would allow them to misuse a system.

Basic auth:
The technology used to establish a user's request to access a server.

OAuth:
An open-standard authorization protocol that shares designated access between applications.

API token:
A small block of encrypted code that contains information about a user.

Session:
A sequence of network HTTP basic auth requests and responses associated with the same user.

Session ID:
A uique token that identifies a user and their device while accessing system.

Session cookie:
A token that websites use to validate a session and determine how long that session should last.

Session hijacking:
An event when attackers obtain a legitimate user's session ID.

Identity and access management (IAM):
As organizations become more reliant on technology, regulatory agencies have put more pressure on them to demonstrate that they’re 
doing everything they can to prevent threats. Identity and access management (IAM) is a collection of processes and technologies 
that helps organizations manage digital identities in their environment. Both AAA and IAM systems are designed to authenticate 
users, determine their access privileges, and track their activities within a system.

Either model used by your organization is more than a single, clearly defined system. They each consist of a collection of security 
controls that ensure the right user is granted access to the right resources at the right time and for the right reasons. Each of 
those four factors is determined by your organization's policies and processes.

Note: A user can either be a person, a device, or software.

Authenticating users
To ensure the right user is attempting to access a resource requires some form of proof that the user is who they claim to be. There 
are a few factors that can be used to authenticate a user:

->Knowledge, or something the user knows

->Ownership, or something the user possesses

->Characteristic, or something the user is

Authentication is mainly verified with login credentials. Single sign-on (SSO), a technology that combines several different logins 
into one, and multi-factor authentication (MFA), a security measure that requires a user to verify their identity in two or more 
ways to access a system or network, are other tools that organizations use to authenticate individuals and systems.

Pro tip: Another way to remember this authentication model is: something you know, something you have, and something you are.

 User provisioning:
 Back-end systems need to be able to verify whether the information provided by a user is accurate. To accomplish this, users must 
 be properly provisioned. User provisioning is the process of creating and maintaining a user's digital identity. For example, a 
 college might create a new user account when a new instructor is hired. The new account will be configured to provide access to 
 instructor-only resources while they are teaching. Security analysts are routinely involved with provisioning users and their 
 access privileges.

 Pro tip: Another role analysts have in IAM is to deprovision users. This is an important practice that removes a user's access 
 rights when they should no longer have them.

 Granting authorization:
 If the right user has been authenticated, the network should ensure the right resources are made available. There are three 
 common frameworks that organizations use to handle this step of IAM:

 ->Mandatory access control (MAC):MAC is the strictest of the three frameworks. Authorization in this model is based on a strict 
   need-to-know basis. Access to information must be granted manually by a central authority or system administrator. For example, 
   MAC is commonly applied in law enforcement, military, and other government agencies where users must request access through a 
   chain of command. MAC is also known as non-discretionary control because access isn’t given at the discretion of the data owner.

 ->Discretionary access control (DAC):DAC is typically applied when a data owner decides appropriate levels of access. One example 
   of DAC is when the owner of a Google Drive folder shares editor, viewer, or commentor access with someone else.

 ->Role-based access control (RBAC):RBAC is used when authorization is determined by a user's role within an organization. For 
   example, a user in the marketing department may have access to user analytics but not network administration.

Access control technologies:
Users often experience authentication and authorization as a single, seamless experience. In large part, that’s due to access 
control technologies that are configured to work together. These tools offer the speed and automation needed by administrators to 
monitor and modify access rights. They also decrease errors and potential risks.

An organization's IT department sometimes develops and maintains customized access control technologies on their own. A typical 
IAM or AAA system consists of a user directory, a set of tools for managing data in that directory, an authorization system, and 
an auditing system. Some organizations create custom systems to tailor them to their security needs. However, building an in-house 
solution comes at a steep cost of time and other resources.

Instead, many organizations opt to license third-party solutions that offer a suite of tools that enable them to quickly secure 
their information systems. Keep in mind, security is about more than combining a bunch of tools. It’s always important to 
configure these technologies so they can help to provide a secure environment.