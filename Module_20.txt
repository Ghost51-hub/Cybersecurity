Social Engineering:
A manipulation technique that exploits human error to gain private information, access, or valuables.

 Stages of social engineering:
 1.Prepare

 2.Establish trust

 3.Use persuasion tactics

 4.Disconnect from the target

 Signs of an attack:
 Oftentimes, people are unable to tell that an attack is happening until it's too late. Social engineering is such a dangerous 
 threat because it typically allows attackers to bypass technological defenses that are in their way. Although these threats are 
 difficult to prevent, recognizing the signs of social engineering is a key to reducing the likelihood of a successful attack.

 These are common types of social engineering to watch out for:

 ->Baiting is a social engineering tactic that tempts people into compromising their security. A common example is USB baiting that 
   relies on someone finding an infected USB drive and plugging it into their device.

 ->Phishing is the use of digital communications to trick people into revealing sensitive data or deploying malicious software. It 
   is one of the most common forms of social engineering, typically performed via email.

 ->Quid pro quo is a type of baiting used to trick someone into believing that they’ll be rewarded in return for sharing access, 
   information, or money. For example, an attacker might impersonate a loan officer at a bank and call customers offering them a 
   lower interest rate on their credit card. They'll tell the customers that they simply need to provide their account details to 
   claim the deal.

 ->Tailgating is a social engineering tactic in which unauthorized people follow an authorized person into a restricted area. This 
   technique is also sometimes referred to as piggybacking.

 ->Watering hole is a type of attack when a threat actor compromises a website frequently visited by a specific group of users. 
   Oftentimes, these watering hole sites are infected with malicious software. An example is the Holy Water attack of 2020 that 
   infected various religious, charity, and volunteer websites.

 Encouraging caution"
 Spreading awareness usually starts with comprehensive security training. When it comes to social engineering, there are three main 
 areas to focus on when teaching others:

 ->Stay alert of suspicious communications and unknown people, especially when it comes to email. For example, look out for 
   spelling errors and double-check the sender's name and email address.

 ->Be cautious about sharing information, especially over social media. Threat actors often search these platforms for any 
   information they can use to their advantage.

 ->Control curiosity when something seems too good to be true. This can include wanting to click on attachments or links in emails 
   and advertisements.

 Pro tip: Implementing technologies like firewalls, multi-factor authentication (MFA), block lists, email filtering, and others 
 helps layers the defenses should someone make a mistake.

Phishing:
The use of digital communications to trick people into revealing sensitive data or deploying malicious software.

 Types of Phishing:

 ->Email phishing is a type of attack sent via email in which threat actors send messages pretending to be a trusted person or 
   entity.

 ->Smishing is a type of phishing that uses Short Message Service (SMS), a technology that powers text messaging. Smishing covers 
   all forms of text messaging services, including Apple’s iMessages, WhatsApp, and other chat mediums on phones.

 ->Vishing refers to the use of voice calls or voice messages to trick targets into providing personal information over the phone.

 ->Spear phishing is a subset of email phishing in which specific people are purposefully targeted, such as the accountants of a 
   small business.

 ->Whaling refers to a category of spear phishing attempts that are aimed at high-ranking executives in an organization.

Malware:
Software designed to harm devices or netweorks.

 Types of Malware:

 ->Virus: Malicious code written to interfere with computer operations and cause damage to data and software. This type of malware 
   must be installed by the target user before it can spread itself and cause damage. One of the many ways that viruses are spread 
   is through phishing campaigns where malicious links are hidden within links or attachments.

 ->Worm: Malware that can duplicate and spread itself across systems on it's own. Similar to a virus, a worm must be installed by 
   the target user and can also be spread with tactics like malicious email. Given a worm's ability to spread on its own, attackers 
   sometimes target devices, drives, or files that have shared access over a network.

 ->Trojan: Malware that looks like a legitimate file or program. This characteristic relates to how trojans are spread. Similar to 
   viruses, attackers deliver this type of malware hidden in file and application downloads. Attackers rely on tricking unsuspecting 
   users into believing they’re downloading a harmless file, when they’re actually infecting their own device with malware that can 
   be used to spy on them, grant access to other devices, and more.

 ->Ransomware: Type of malicious attack where attackers encrypt an organization's data and demand payment to restore access.

 ->Spyware: Malware that's used to gather and sell information without consent. It's also considered a PUA. Spyware is commonly 
   hidden in bundleware, additional software that is sometimes packaged with other applications. PUAs like spyware have become a 
   serious challenge in the open-source software development ecosystem. That’s because developers tend to overlook how their 
   software could be misused or abused by others.

 ->Adware: Advertising-supported software, or adware, is a type of legitimate software that is sometimes used to display digital 
   advertisements in applications. Software developers often use adware as a way to lower their production costs or to make their 
   products free to the public—also known as freeware or shareware. In these instances, developers monetize their product through 
   ad revenue rather than at the expense of their users.

 ->Scareware: Another type of PUA is scareware. This type of malware employs tactics to frighten users into infecting their own 
   device. Scareware tricks users by displaying fake warnings that appear to come from legitimate companies. Email and pop-ups are 
   just a couple of ways scareware is spread. Both can be used to deliver phony warnings with false claims about the user's files 
   or data being at risk.

 ->Fileless Malware: Fileless malware does not need to be installed by the user because it uses legitimate programs that are already 
   installed to infect a computer. This type of infection resides in memory where the malware never touches the hard drive. This is 
   unlike the other types of malware, which are stored within a file on disk. Instead, these stealthy infections get into the 
   operating system or hide within trusted applications.

   Pro tip: Fileless malware is detected by performing memory analysis, which requires experience with operating systems. 

 ->Rootkit: A rootkit is malware that provides remote, administrative access to a computer. Most attackers use rootkits to open a 
   backdoor to systems, allowing them to install other forms of malware or to conduct network security attacks.

   This kind of malware is often spread by a combination of two components: a dropper and a loader. A dropper is a type of malware 
   that comes packed with malicious code which is delivered and installed onto a target system. For example, a dropper is often 
   disguised as a legitimate file, such as a document, an image, or an executable to deceive its target into opening, or dropping 
   it, onto their device. If the user opens the dropper program, its malicious code is executed and it hides itself on the target 
   system.

   Multi-staged malware attacks, where multiple packets of malicious code are deployed, commonly use a variation called a loader. 
   A loader is a type of malware that downloads strains of malicious code from an external source and installs them onto a target 
   system. Attackers might use loaders for different purposes, such as to set up another type of malware---a botnet.

 ->Botnet: A botnet, short for “robot network,” is a collection of computers infected by malware that are under the control of a 
   single threat actor, known as the “bot-herder.” Viruses, worms, and trojans are often used to spread the initial infection and 
   turn the devices into a bot for the bot-herder. The attacker then uses file sharing, email, or social media application protocols 
   to create new bots and grow the botnet. When a target unknowingly opens the malicious file, the computer, or bot, reports the 
   information back to the bot-herder, who can execute commands on the infected computer.

 ->Cryptojacking: A form of malware that installs software to illegally mine cryptocurrencies.

Web-based exploits:
Malicious code or behaviour that's used to take advantage of coding flaws in a web application.

Injection attack:
Malicious code inserted into a vulnerable application.

 Cross-site scripting (XSS): 
 An injection attack that inserts code into a vulnerable website or web application.

 Types of Cross-site scripting attacks:

 ->Reflected: An instance when malicious script is sent to a server and activated during the server's response.

 ->Stored: An instance when malicious script is injected directly on the server.

 ->DOM-based: An instance when malicious script exists in the webpage a browser loads.

 SQL injection:
 An attack that executes unexpected queries on a database.

  SQL injection categories:

  ->In-band SQL injection: In-band, or classic, SQL injection is the most common type. An in-band injection is one that uses the 
    same communication channel to launch the attack and gather the results.

    For example, this might occur in the search box of a retailer's website that lets customers find products to buy. If the search 
    box is vulnerable to injection, an attacker could enter a malicious query that would be executed in the database, causing it to 
    return sensitive information like user passwords. The data that's returned is displayed back in the search box where the attack 
    was initiated.

  ->Out-of-band SQL injection: An out-of-band injection is one that uses a different communication channel  to launch the attack 
    and gather the results.

    For example, an attacker could use a malicious query to create a connection between a vulnerable website and a database they 
    control. This separate channel would allow them to bypass any security controls that are in place on the website's server, 
    allowing them to steal sensitive data

    Note: Out-of-band injection attacks are very uncommon because they'll only work when certain features are enabled on the 
    target server.

  ->Inferential SQL injection: Inferential SQL injection occurs when an attacker is unable to directly see the results of their 
    attack. Instead, they can interpret the results by analyzing the behavior of the system.

    For example, an attacker might perform a SQL injection attack on the login form of a website that causes the system to respond 
    with an error message. Although sensitive data is not returned, the attacker can figure out the database's structure based on 
    the error. They can then use this information to craft attacks that will give them access to sensitive data or to take control 
    of the system.

 Injection Prevention:
 SQL queries are often programmed with the assumption that users will only input relevant information. For example, a login form 
 that expects users to input their email address assumes the input will be formatted a certain way, such as jdoe@domain.com. 
 Unfortunately, this isn’t always the case.

 A key to preventing SQL injection attacks is to escape user inputs—preventing someone from inserting any code that a program isn't 
 expecting.

 There are several ways to escape user inputs:

  ->Prepared statements: a coding technique that executes SQL statements before passing them on to a database

  ->Input sanitization: programming that removes user input which could be interpreted as code.

  ->Input validation: programming that ensures user input meets a system's expectations.

Threat Modeling:
The process of identifying assets, their vulnerabilities, and how each is exposed to threats.

 Threat Model Steps:
 1.Define the scope

 2.Identify threats

 3.Characterize the environment

 4.Analyze threats

 5.Mitigate risks

 6.Evaluate findings. 